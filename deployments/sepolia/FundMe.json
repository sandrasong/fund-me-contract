{
  "address": "0x603c599AD9C700481003C06B9b89dDC500aE8397",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "FundMe__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "MINIMUM_USD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cheaperWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "funder",
          "type": "address"
        }
      ],
      "name": "getAddressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getFunder",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x1f8ad422fd576c4f67e3d1e094ae69c6ec6a04700cec923e6dd41bd49da4e159",
  "receipt": {
    "to": null,
    "from": "0x42ba23B1385Cc577BeedD6ff33CE9F070c993e0f",
    "contractAddress": "0x603c599AD9C700481003C06B9b89dDC500aE8397",
    "transactionIndex": 34,
    "gasUsed": "980238",
    "logsBloom": "0x
    "blockHash": "0x94e7f65a161f1ea7f129f89d33fdc7c79191ebf113fa2fe964c0180c9b565b80",
    "transactionHash": "0x1f8ad422fd576c4f67e3d1e094ae69c6ec6a04700cec923e6dd41bd49da4e159",
    "logs": [],
    "blockNumber": 5917199,
    "cumulativeGasUsed": "5326601",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "8d0934efe99cd40b3b7c5bbc211b5e0f",
  "metadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"FundMe__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"MINIMUM_USD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cheaperWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"funder\",\"type\":\"address\"}],\"name\":\"getAddressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getFunder\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getOwner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"Sandra\",\"details\":\"This implements price feeds as our library\",\"kind\":\"dev\",\"methods\":{},\"title\":\"A contract for crowd funding\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(\\n    uint80 _roundId\\n  ) external view returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (uint80 roundId, int256 answer, uint256 startedAt, uint256 updatedAt, uint80 answeredInRound);\\n}\\n\",\"keccak256\":\"0xfe4e8bb4861bb3860ba890ab91a3b818ec66e5a8f544fb608cfcb73f433472cd\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// pragma\\npragma solidity ^0.8.8;\\n// imports\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n// error codes\\nerror FundMe__NotOwner();\\n\\n// Interfaces, Libraries, Contracts\\n\\n/** @title A contract for crowd funding\\n *  @author Sandra\\n *  @dev This implements price feeds as our library\\n */\\n\\ncontract FundMe {\\n  // Type declarations\\n  using PriceConverter for uint256;\\n\\n  // State variables\\n  mapping(address => uint256) private s_addressToAmountFunded;\\n  address[] private s_funders;\\n\\n  address private immutable i_owner;\\n  uint256 public constant MINIMUM_USD = 50 * 10 ** 18;\\n\\n  AggregatorV3Interface private s_priceFeed;\\n\\n  modifier onlyOwner() {\\n    if (msg.sender != i_owner) revert FundMe__NotOwner();\\n    _;\\n  }\\n\\n  constructor(address priceFeedAddress) {\\n    i_owner = msg.sender;\\n    s_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n  }\\n\\n  fallback() external payable {\\n    fund();\\n  }\\n\\n  receive() external payable {\\n    fund();\\n  }\\n\\n  function fund() public payable {\\n    require(\\n      msg.value.getConversionRate(s_priceFeed) >= MINIMUM_USD,\\n      \\\"You need to spend more ETH!\\\"\\n    );\\n    s_addressToAmountFunded[msg.sender] += msg.value;\\n    s_funders.push(msg.sender);\\n  }\\n\\n  function withdraw() public onlyOwner {\\n    for (\\n      uint256 funderIndex = 0;\\n      funderIndex < s_funders.length;\\n      funderIndex++\\n    ) {\\n      address funder = s_funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n\\n    (bool callSuccess, ) = payable(msg.sender).call{\\n      value: address(this).balance\\n    }(\\\"\\\");\\n    require(callSuccess, \\\"Call failed\\\");\\n  }\\n\\n  function cheaperWithdraw() public payable onlyOwner {\\n    address[] memory funders = s_funders;\\n    for (uint256 funderIndex = 0; funderIndex < funders.length; funderIndex++) {\\n      address funder = funders[funderIndex];\\n      s_addressToAmountFunded[funder] = 0;\\n    }\\n    s_funders = new address[](0);\\n    (bool callSuccess, ) = i_owner.call{value: address(this).balance}(\\\"\\\");\\n    require(callSuccess, \\\"Call failed\\\");\\n  }\\n\\n  function getOwner() public view returns (address) {\\n    return i_owner;\\n  }\\n\\n  function getFunder(uint256 index) public view returns (address) {\\n    return s_funders[index];\\n  }\\n\\n  function getAddressToAmountFunded(\\n    address funder\\n  ) public view returns (uint256) {\\n    return s_addressToAmountFunded[funder];\\n  }\\n\\n  function getPriceFeed() public view returns (AggregatorV3Interface) {\\n    return s_priceFeed;\\n  }\\n}\\n\",\"keccak256\":\"0x36606fa495de6edc93ea8572404ab075ad3f0ff562c4ae35a7162663964cc8be\",\"license\":\"MIT\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.8;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/shared/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  function getPrice(\\n    AggregatorV3Interface priceFeed\\n  ) internal view returns (uint256) {\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    // ETH/USD rate in 18 digit\\n    return uint256(answer * 10000000000);\\n    // or (Both will do the same thing)\\n    // return uint256(answer * 1e10); // 1* 10 ** 10 == 10000000000\\n  }\\n\\n  // 1000000000\\n  function getConversionRate(\\n    uint256 ethAmount,\\n    AggregatorV3Interface priceFeed\\n  ) internal view returns (uint256) {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n    // or (Both will do the same thing)\\n    // uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1e18; // 1 * 10 ** 18 == 1000000000000000000\\n    // the actual ETH/USD conversion rate, after adjusting the extra 0s.\\n    return ethAmountInUsd;\\n  }\\n}\\n\",\"keccak256\":\"0x3b6d165cad748bc2e00ce906607ed806c0d91af5ba3cc784976f4893d167152e\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b50604051620011dc380380620011dc83398181016040528101906200003791906200011d565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550506200014f565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620000e582620000b8565b9050919050565b620000f781620000d8565b81146200010357600080fd5b50565b6000815190506200011781620000ec565b92915050565b600060208284031215620001365762000135620000b3565b5b6000620001468482850162000106565b91505092915050565b60805161105c62000180600039600081816103420152818161058b015281816105db01526107cb015261105c6000f3fe60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ab6565b6102f8565b6040516100cc9190610afc565b60405180910390f35b3480156100e157600080fd5b506100ea610340565b005b3480156100f857600080fd5b5061010161057a565b60405161010e9190610afc565b60405180910390f35b34801561012357600080fd5b5061012c610587565b6040516101399190610b26565b60405180910390f35b34801561014e57600080fd5b506101576105af565b6040516101649190610ba0565b60405180910390f35b6101756101be565b005b61017f6105d9565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610be7565b610897565b6040516101b59190610b26565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108df90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c71565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028c9190610cc0565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c5576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561046a576000600182815481106103eb576103ea610cf4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506103c8565b50600067ffffffffffffffff81111561048657610485610d23565b5b6040519080825280602002602001820160405280156104b45781602001602082028036833780820191505090505b50600190805190602001906104ca9291906109ac565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f190610d83565b60006040518083038185875af1925050503d806000811461052e576040519150601f19603f3d011682016040523d82523d6000602084013e610533565b606091505b5050905080610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e90610de4565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106e257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610698575b5050505050905060005b815181101561076657600082828151811061070a57610709610cf4565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506106ec565b50600067ffffffffffffffff81111561078257610781610d23565b5b6040519080825280602002602001820160405280156107b05781602001602082028036833780820191505090505b50600190805190602001906107c69291906109ac565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080d90610d83565b60006040518083038185875af1925050503d806000811461084a576040519150601f19603f3d011682016040523d82523d6000602084013e61084f565b606091505b5050905080610893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088a90610de4565b60405180910390fd5b5050565b6000600182815481106108ad576108ac610cf4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108eb8361091b565b90506000670de0b6b3a764000085836109049190610e04565b61090e9190610e75565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610969573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098d9190610f33565b5050509150506402540be400816109a49190610fae565b915050919050565b828054828255906000526020600020908101928215610a25579160200282015b82811115610a245782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109cc565b5b509050610a329190610a36565b5090565b5b80821115610a4f576000816000905550600101610a37565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8382610a58565b9050919050565b610a9381610a78565b8114610a9e57600080fd5b50565b600081359050610ab081610a8a565b92915050565b600060208284031215610acc57610acb610a53565b5b6000610ada84828501610aa1565b91505092915050565b6000819050919050565b610af681610ae3565b82525050565b6000602082019050610b116000830184610aed565b92915050565b610b2081610a78565b82525050565b6000602082019050610b3b6000830184610b17565b92915050565b6000819050919050565b6000610b66610b61610b5c84610a58565b610b41565b610a58565b9050919050565b6000610b7882610b4b565b9050919050565b6000610b8a82610b6d565b9050919050565b610b9a81610b7f565b82525050565b6000602082019050610bb56000830184610b91565b92915050565b610bc481610ae3565b8114610bcf57600080fd5b50565b600081359050610be181610bbb565b92915050565b600060208284031215610bfd57610bfc610a53565b5b6000610c0b84828501610bd2565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c5b601b83610c14565b9150610c6682610c25565b602082019050919050565b60006020820190508181036000830152610c8a81610c4e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ccb82610ae3565b9150610cd683610ae3565b9250828201905080821115610cee57610ced610c91565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d6d600083610d52565b9150610d7882610d5d565b600082019050919050565b6000610d8e82610d60565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dce600b83610c14565b9150610dd982610d98565b602082019050919050565b60006020820190508181036000830152610dfd81610dc1565b9050919050565b6000610e0f82610ae3565b9150610e1a83610ae3565b9250828202610e2881610ae3565b91508282048414831517610e3f57610e3e610c91565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e8082610ae3565b9150610e8b83610ae3565b925082610e9b57610e9a610e46565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ec581610ea6565b8114610ed057600080fd5b50565b600081519050610ee281610ebc565b92915050565b6000819050919050565b610efb81610ee8565b8114610f0657600080fd5b50565b600081519050610f1881610ef2565b92915050565b600081519050610f2d81610bbb565b92915050565b600080600080600060a08688031215610f4f57610f4e610a53565b5b6000610f5d88828901610ed3565b9550506020610f6e88828901610f09565b9450506040610f7f88828901610f1e565b9350506060610f9088828901610f1e565b9250506080610fa188828901610ed3565b9150509295509295909350565b6000610fb982610ee8565b9150610fc483610ee8565b9250828202610fd281610ee8565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561100a57611009610c91565b5b828205841483151761101f5761101e610c91565b5b509291505056fea264697066735822122038613200c70a94e4a97830bd515c0cd8a347fd425be06dc6f1ee8ccb00ee435d64736f6c63430008180033",
  "deployedBytecode": "0x60806040526004361061007f5760003560e01c80639e87a5cd1161004e5780639e87a5cd14610142578063b60d42881461016d578063be2693f014610177578063d7b4750c146101815761008e565b80630343fb25146100985780633ccfd60b146100d55780636b69a592146100ec578063893d20e8146101175761008e565b3661008e5761008c6101be565b005b6100966101be565b005b3480156100a457600080fd5b506100bf60048036038101906100ba9190610ab6565b6102f8565b6040516100cc9190610afc565b60405180910390f35b3480156100e157600080fd5b506100ea610340565b005b3480156100f857600080fd5b5061010161057a565b60405161010e9190610afc565b60405180910390f35b34801561012357600080fd5b5061012c610587565b6040516101399190610b26565b60405180910390f35b34801561014e57600080fd5b506101576105af565b6040516101649190610ba0565b60405180910390f35b6101756101be565b005b61017f6105d9565b005b34801561018d57600080fd5b506101a860048036038101906101a39190610be7565b610897565b6040516101b59190610b26565b60405180910390f35b6802b5e3af16b18800006101fd600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16346108df90919063ffffffff16565b101561023e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161023590610c71565b60405180910390fd5b346000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461028c9190610cc0565b925050819055506001339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103c5576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b60018054905081101561046a576000600182815481106103eb576103ea610cf4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506103c8565b50600067ffffffffffffffff81111561048657610485610d23565b5b6040519080825280602002602001820160405280156104b45781602001602082028036833780820191505090505b50600190805190602001906104ca9291906109ac565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f190610d83565b60006040518083038185875af1925050503d806000811461052e576040519150601f19603f3d011682016040523d82523d6000602084013e610533565b606091505b5050905080610577576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056e90610de4565b60405180910390fd5b50565b6802b5e3af16b188000081565b60007f0000000000000000000000000000000000000000000000000000000000000000905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461065e576040517f579610db00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600060018054806020026020016040519081016040528092919081815260200182805480156106e257602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610698575b5050505050905060005b815181101561076657600082828151811061070a57610709610cf4565b5b6020026020010151905060008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055505080806001019150506106ec565b50600067ffffffffffffffff81111561078257610781610d23565b5b6040519080825280602002602001820160405280156107b05781602001602082028036833780820191505090505b50600190805190602001906107c69291906109ac565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff164760405161080d90610d83565b60006040518083038185875af1925050503d806000811461084a576040519150601f19603f3d011682016040523d82523d6000602084013e61084f565b606091505b5050905080610893576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088a90610de4565b60405180910390fd5b5050565b6000600182815481106108ad576108ac610cf4565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050919050565b6000806108eb8361091b565b90506000670de0b6b3a764000085836109049190610e04565b61090e9190610e75565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610969573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061098d9190610f33565b5050509150506402540be400816109a49190610fae565b915050919050565b828054828255906000526020600020908101928215610a25579160200282015b82811115610a245782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906109cc565b5b509050610a329190610a36565b5090565b5b80821115610a4f576000816000905550600101610a37565b5090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a8382610a58565b9050919050565b610a9381610a78565b8114610a9e57600080fd5b50565b600081359050610ab081610a8a565b92915050565b600060208284031215610acc57610acb610a53565b5b6000610ada84828501610aa1565b91505092915050565b6000819050919050565b610af681610ae3565b82525050565b6000602082019050610b116000830184610aed565b92915050565b610b2081610a78565b82525050565b6000602082019050610b3b6000830184610b17565b92915050565b6000819050919050565b6000610b66610b61610b5c84610a58565b610b41565b610a58565b9050919050565b6000610b7882610b4b565b9050919050565b6000610b8a82610b6d565b9050919050565b610b9a81610b7f565b82525050565b6000602082019050610bb56000830184610b91565b92915050565b610bc481610ae3565b8114610bcf57600080fd5b50565b600081359050610be181610bbb565b92915050565b600060208284031215610bfd57610bfc610a53565b5b6000610c0b84828501610bd2565b91505092915050565b600082825260208201905092915050565b7f596f75206e65656420746f207370656e64206d6f726520455448210000000000600082015250565b6000610c5b601b83610c14565b9150610c6682610c25565b602082019050919050565b60006020820190508181036000830152610c8a81610c4e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610ccb82610ae3565b9150610cd683610ae3565b9250828201905080821115610cee57610ced610c91565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610d6d600083610d52565b9150610d7882610d5d565b600082019050919050565b6000610d8e82610d60565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610dce600b83610c14565b9150610dd982610d98565b602082019050919050565b60006020820190508181036000830152610dfd81610dc1565b9050919050565b6000610e0f82610ae3565b9150610e1a83610ae3565b9250828202610e2881610ae3565b91508282048414831517610e3f57610e3e610c91565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610e8082610ae3565b9150610e8b83610ae3565b925082610e9b57610e9a610e46565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610ec581610ea6565b8114610ed057600080fd5b50565b600081519050610ee281610ebc565b92915050565b6000819050919050565b610efb81610ee8565b8114610f0657600080fd5b50565b600081519050610f1881610ef2565b92915050565b600081519050610f2d81610bbb565b92915050565b600080600080600060a08688031215610f4f57610f4e610a53565b5b6000610f5d88828901610ed3565b9550506020610f6e88828901610f09565b9450506040610f7f88828901610f1e565b9350506060610f9088828901610f1e565b9250506080610fa188828901610ed3565b9150509295509295909350565b6000610fb982610ee8565b9150610fc483610ee8565b9250828202610fd281610ee8565b91507f8000000000000000000000000000000000000000000000000000000000000000841460008412161561100a57611009610c91565b5b828205841483151761101f5761101e610c91565b5b509291505056fea264697066735822122038613200c70a94e4a97830bd515c0cd8a347fd425be06dc6f1ee8ccb00ee435d64736f6c63430008180033",
  "devdoc": {
    "author": "Sandra",
    "details": "This implements price feeds as our library",
    "kind": "dev",
    "methods": {},
    "title": "A contract for crowd funding",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 59,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_addressToAmountFunded",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_funders",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 74,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}